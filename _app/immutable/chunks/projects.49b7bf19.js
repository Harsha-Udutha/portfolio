import{A as e}from"./UIcon.60ab9d3c.js";import{g as t}from"./skills.58b1c870.js";import{b as i}from"./paths.53a3a368.js";const a=[{slug:"predictive-stress-monitoring",color:"#34a853",description:"Predictive Stress Monitoring is a real-time mobile AI system designed to anticipate stress episodes using physiological and contextual data from a smartwatch. The backend model was trained on a combination of four public datasets: WESAD, AffectiveROAD, Nurse Stress Dataset, and the Smartwatch Health Dataset. After preprocessing and aligning features like heart rate variability (HRV), step count, and motion signals, a LightGBM classifier was initially trained to predict stress labels. Later, the model was re-trained using TensorFlow, converted to TensorFlow Lite, and optimized for mobile inference. A rolling 3-minute buffer on the Android phone collects live sensor data from the Galaxy Watch 4 using the Wear OS Data Layer API. This buffer helps detect sustained physiological changes, avoiding false positives caused by temporary activity spikes. Context-aware logic suppresses stress alerts during or after caffeine intake or exercise. When potential stress is predicted, the app triggers synchronized notifications on both the phone and watch and asks the user to confirm their recent context. The project involved Android development in Kotlin, real-time sensor streaming, bidirectional device communication, and on-device machine learning using TFLite—all working together to deliver proactive, intelligent mental health support.",shortDescription:"Real-time stress detection using heart rate, step count, motion sensors, and TensorFlow Lite.",links:[{to:"https://github.com/Harsha-Udutha/StressPrediction",label:"GitHub (Watch + Phone)"}],logo:e.Android??e.Unknown,name:"Predictive Stress Monitoring",period:{from:new Date(2025,0,1),to:new Date(2025,3,31)},skills:t("python","kotlin","tensorflow","android-studio","git"),type:"Mobile AI System",screenshots:[{src:"${base}/project/stressPredictive/1.png",label:"Data communication in Logcat"},{src:"${base}/project/stressPredictive/2.png",label:"Prompted with contextual alert"},{src:"${base}/project/stressPredictive/5.png",label:'Prompted user if pressed "YES"'},{src:"${base}/project/stressPredictive/4.png",label:'Prompted user if pressed "NO"'},{src:"${base}/project/stressPredictive/3.png",label:"Stress notification alert on Android system tray"},{src:`${i}/project/stressPredictive/Media1.mp4`,label:"Demo - After Gaming Session"}]},{slug:"tradeplay-marketplace",color:"#fbbc05",description:"A web app concept for exchanging games and consoles. Includes user authentication, profile management, and game listings using Firebase. AI-powered modules are planned for fraud detection, smart pricing, search, and toxic content moderation.",shortDescription:"A community-driven marketplace for buying/trading games and accessories.",links:[{to:"https://github.com/Harsha-Udutha/TradePlay",label:"GitHub (TRADEPLAY)"}],logo:e.JavaScript??e.Unknown,name:"TRADEPLAY – Game Exchange Marketplace",period:{from:new Date(2025,5,1)},skills:t("html","css","firebase","python","git"),type:"Web App"},{slug:"vr-gaming-cardboard",color:"#4285f4",description:"Designed a cost-effective VR gaming system using Unity and Google Cardboard. Integrated joystick input, 3D scenes, and mobile-friendly performance optimizations. Intended for educational and indie use cases with over 70% cost reduction.",shortDescription:"Low-cost VR prototype using smartphones, Cardboard, and Unity.",links:[{to:"https://github.com/Harsha-Udutha/VR_Project",label:"GitHub (Economical VR)"}],logo:e.Unity??e.Unknown,name:"Economical VR Gaming System",period:{from:new Date(2023,1,1),to:new Date(2023,3,1)},skills:t("csharp","unity","android-studio","git"),type:"VR System Prototype"},{slug:"parking-violation-prediction",color:"#ea4335",description:"Used NYC open data to identify parking violation hotspots. Engineered features from timestamps and location data, applied classification models (Random Forest, Logistic Regression), and visualized insights for city planning.",shortDescription:"ML model to predict high-risk parking violation zones in NYC.",links:[],logo:e.Python??e.Unknown,name:"Parking Violation Prediction",period:{from:new Date(2022,4,1),to:new Date(2022,5,30)},skills:t("python","scikit-learn","git"),type:"Data Science Project"}],r="Projects";export{a as i,r as t};
